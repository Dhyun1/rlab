trt2<-factor(c(rep("A2",length(A2)),rep("B2",length(B2)),rep("C2",length(C2))))
trt2
block2<-factor(c(rep(1:4,3)))
friedman.test(x2,trt2,block2)
A3<-c(3.5,3.7,1.6,2.5,2.8,2.0,5.9,2.5)
B3<-c(5.9,8.1,8.1,8.6,8.1,5.9,9.5,7.9)
C3<-c(13.9,12.6,8.1,6.8,14.3,4.2,14.5,7.9)
x3<-c(A3,B3,C3)
x3<-cbind(A3,B3,C3)
install.packages("crank")
library(crank)
page.trend.test(x3,rank=FALSE)
A4<-c(22.6,53.1,8.3,21.6,13.3,37.0,14.8,14.8)
B4<-c(23.1,57.6,10.5,23.6,11.9,54.6,21.0,20.3)
C4<-c(22.7,53.2,9.7,19.6,13.8,47.1,13.1,13.1,23.6)
D4<-c(22.5,53.7,10.8,21.1,13.7,39.2,13.7,16.3)
x4<-c(A4,B4,C4,D4)
trt4<-factor(c(rep("A4",length(A4)),rep("B4",length(B4)),rep("C4",length(C4))),rep("D4",length(D4))))
trt4<-factor(c(rep("A4",length(A4)),rep("B4",length(B4)),rep("C4",length(C4)),rep("D4",length(D4))))
trt4
C4<-c(22.7,53.2,9.7,19.6,13.8,47.1,13.1,23.6)
D4<-c(22.5,53.7,10.8,21.1,13.7,39.2,13.7,16.3)
x4<-c(A4,B4,C4,D4)
trt4<-factor(c(rep("A4",length(A4)),rep("B4",length(B4)),rep("C4",length(C4)),rep("D4",length(D4))))
trt4
block4<-factor(c(rep(1:8,4)))
friedman.test(x4,trt4,block4)
install.packages("PMCMR")
posthoc.friedman.nemenyi.test(x4)
library(PMCMR)
posthoc.friedman.nemenyi.test(x4)
posthoc.friedman.nemenyi.test(x4,trt4)
posthoc.friedman.nemenyi.test(x4,trt4,block4)
posthoc.friedman.nemenyi.test(x4,trt4,block4,probs=0.05)
posthoc.friedman.nemenyi.test(x4, trt4, block4, probs = 0.05, cont="two-tailed")
posthoc.friedman.nemenyi.test(x4, trt4, block4, probs = 0.05, cont="one-tailed")
x1<-c(20,17,15,19,23,14,27,17,18,15,15,23,21,16,12,19,18,19,16,17,26,21)
y1<-c(90,94,100,103,103,106,108,109,109,112,112,113,114,118,119,120,124,132,133,141,155,157)
cor.test(x1, y1, method="kendall", alternative="greater")
length(x1)
length(x2)
length(x1)
length(y1)
cor.test(x1, y1, method="spearman", alternative="greater")
x2<-c(1:13)
x2
y2<-c(6.1,7.5,7.7,5.9,5.2,6.1,5.3,4.5,4.9,4.6,3.0,4.0,3.7)
cor.test(x2, y2, method="kendall", alternative="greater")
x2<-c(1:13)
y2<-c(6.1,7.5,7.7,5.9,5.2,6.1,5.3,4.5,4.9,4.6,3.0,4.0,3.7)
cor.test(x2, y2, method="spearman", alternative="greater")
cor.test(x2, y2, method="kendall", alternative="lesser")
cor.test(x2, y2, method="kendall", alternative="less")
cor.test(x2, y2, method="spearman", alternative="less")
data<-matrix(c(rep(0,12)),nrow=3)
data
data<-matrix(c(rep(0,12)),nrow=4)
e<-rt(12,1)
e
set.seed(0312)
data<-matrix(c(rep(0,12)),nrow=4)
e<-rt(12,1)
e<-matrix(rt(12,1),nrow=4)
e
set.seed(0312)
e<-matrix(rt(12,1),nrow=4)
e
e<-matrix(rt(12,1),nrow=4)
e
e<-matrix(rt(12,1),nrow=4)
e
e<-matrix(rt(12,1),nrow=4)
e
set.seed(0312)
e<-matrix(rt(12,1),nrow=4)
e
set.seed(0312)
e<-matrix(rt(12,1),nrow=4)
e
trt<-c(1,1,1,1,2,2,2,2,3,3,3,3)
x<-c(data[,1],data[,2],data[,3])
x
data<-matrix(c(rep(0,12)),nrow=4)
trt<-c(1,1,1,1,2,2,2,2,3,3,3,3)
set.seed(0312)
e<-matrix(rt(12,1),nrow=4)
data[i,j]<-j+e[i,j]
j<-matrix(c(1,1,1,1,2,2,2,2,3,3,3,3),nrow=4)
j
set.seed(0312)
e<-matrix(rt(12,1),nrow=4)
data<-j+e[i,j]
data<-j+e
data
x<-c(data[,1],data[,2],data[,3])
x
A<-c(71,57,85,67,66,79)
B<-c(76,94,61,36,42,49)
C<-c(80,104,101,90,93,85)
x<-c(A,B,C)
trt<-c(rep(1,length(A)),rep(2,length(B)),rep(3,length(C)))
kruskal.test(x,trt)
kruskal.test(x,trt)$p.value
f.test(x,trt)
f(x,trt)
A<-c(71,57,85,67,66,79)
B<-c(76,94,61,36,42,49)
C<-c(80,104,101,90,93,85)
x<-c(A,B,C)
trt<-c(rep(1,length(A)),rep(2,length(B)),rep(3,length(C)))
block<-c(rep(1:6,3))
lm(x ~ trt + block)
lm(x ~ trt + block)$p.value
aov(x ~ trt + block)
anova(lm(x ~ trt + block))
anova(lm(x ~ trt + block))$p.value
anova(lm(x ~ trt + block))$residuals
anova(lm(x ~ trt + block))$residual
anova(lm(x ~ trt + block))$resid
aov(lm(x ~ trt + block))
anova(lm(x ~ trt + block))
anova(lm(x ~ trt + block))$MSE
anova(lm(x ~ trt + block))$SSE
anova(lm(x ~ trt + block)), trt)
summary(anova(lm(x ~ trt + block)))
X=matrix(c(3,0,0,0,2,1,0,1,2),nr=3)
X
solve(X)
solve(3X)
solve(3*X)
-2.9/sqrt(2.38*0.51/13)
qt(0.025,13)
-2.9/sqrt(2.38*0.51/12)
qt(0.025,12)
sqrt(2.38*0.51/12)
-2.9+0.318*2.17
-2.9-0.318*2.17
sqrt(2.38*0.51/13)
-2.9/sqrt(2.38*0.51/13)
9.49^2
qt(0.025,13)
sqrt(2.38*0.51/13)
-2.9-0.306*2.17
-2.9+0.306*2.17
0.15/(214*0.25)
3/(166*0.25)
install.packages("lme4")
library(lme4)
data<-read.csv("C:\Users\DaeHyun\Desktop\E7.txt")
data<-read.csv("C:/Users/DaeHyun/Desktop/E7/B1.txt")
data
colnames$data
col(data)
y<-c(28, 26, 33, 24, 34, -44, 27, 16, 40, -2,
29, 22, 24, 21, 25, 30, 23, 29, 31, 19)
y<-c(28, 26, 33, 24, 34, -44, 27, 16, 40, -2, 29, 22, 24, 21, 25, 30, 23, 29, 31, 19)
mean(y)
median(y)
mean(y, trim=0.25)
mean(y, trim=0.25)
y<-c(28, 26, 33, 24, 34, -44, 27, 16, 40, -2, 29, 22, 24, 21, 25, 30, 23, 29, 31, 19)
mean(y, trim=0.25)
mean(y, trim=0.1)
R.version.string
updateR() ##############R update
getwd()
install.packages("ISLR")
install.packages("MASS")
install.packages("class")
install.packages("dplyr")
install.packages("ISLR")
install.packages("MASS")
install.packages("class")
install.packages("dplyr")
library(ISLR)
library(MASS)
library(class)
library(dplyr)
getwd()
setwd(./Study/●데이터마이닝/3주차/3주차 실습자료 (KNN))
setwd(/Study/●데이터마이닝/3주차/3주차 실습자료 (KNN))
setwd("./Study/●데이터마이닝/3주차/3주차 실습자료 (KNN)")
setwd("/Study/●데이터마이닝/3주차/3주차 실습자료 (KNN)")
setwd("./Study/●데이터마이닝/3주차/3주차 실습자료 (KNN)")
getwd()
setwd("../Desktop/Study/●데이터마이닝/3주차/3주차 실습자료 (KNN)")
getwd()
iris <- read.csv("iris.csv")
names(iris)
dim(iris)
str(iris)
table(iris$Species)
iris <- read.csv("iris.csv")
smp_size <- floor(0.8 * nrow(iris))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris)), size = smp_size)
train_ind
seq_len(nrow(iris))
train <- iris[train_ind, ]
test <- iris[-train_ind, ]
mean(knn.pred==test$Species)
library(ISLR)
library(MASS)
library(class)
library(dplyr)
getwd()
setwd("../Desktop/Study/●데이터마이닝/3주차/3주차 실습자료 (KNN)")
iris <- read.csv("iris.csv")
##Question1##
smp_size <- floor(0.8 * nrow(iris))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris)), size = smp_size)
train <- iris[train_ind, ]
test <- iris[-train_ind, ]
str(train)
str(test)
# train accuracy
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=1)
table(knn.pred,train$Species)
mean(knn.pred==train$Species)
# test accuracy
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=1)
table(knn.pred,test$Species)
mean(knn.pred==test$Species)
library(ISLR)
library(MASS)
library(class)
library(dplyr)
getwd()
setwd("../Desktop/Study/●데이터마이닝/3주차/3주차 실습자료 (KNN)")
iris <- read.csv("iris.csv")
iris <- read.csv("iris.csv")
smp_size <- floor(0.8 * nrow(iris))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris)), size = smp_size)
train <- iris[train_ind, ]
test <- iris[-train_ind, ]
str(train)
str(test)
# training accuracy, test accuracy for k=2
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=2)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 1
mean(knn.pred==train$Species) ## training accuracy 1
mean(knn.pred==train$Species) ## training accuracy 1
library(ISLR)
library(MASS)
library(class)
library(dplyr)
getwd()
setwd("../Desktop/Study/●데이터마이닝/3주차/3주차 실습자료 (KNN)")
iris <- read.csv("iris.csv")
## Question1 ##
smp_size <- floor(0.8 * nrow(iris))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris)), size = smp_size)
train <- iris[train_ind, ]
test <- iris[-train_ind, ]
str(train)
str(test)
# training accuracy, test accuracy for k=2
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=2)
table(knn.pred,train$Species)
mean(knn.pred==train$Species)
set.seed(1)
smp_size <- floor(0.8 * nrow(iris))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris)), size = smp_size)
train <- iris[train_ind, ]
test <- iris[-train_ind, ]
str(train)
str(test)
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=2)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.983
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=2)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy 0.93
set.seed(1)
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=4)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=4)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=6)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=6)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy
smp_size <- floor(0.5 * nrow(iris))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris)), size = smp_size)
train <- iris[train_ind, ]
test <- iris[-train_ind, ]
str(train)
str(test)
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=2)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 1
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=2)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy 0.93
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=4)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=4)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=6)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy
mean(knn.pred==train$Species) ## training accuracy 0.973
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=6)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy
library(ISLR)
library(MASS)
library(class)
library(dplyr)
getwd()
setwd("../Desktop/Study/●데이터마이닝/3주차/3주차 실습자료 (KNN)")
iris <- read.csv("iris.csv")
## Question1 ##
smp_size <- floor(0.8 * nrow(iris))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris)), size = smp_size)
train <- iris[train_ind, ]
test <- iris[-train_ind, ]
str(train)
str(test)
# training accuracy, test accuracy for k=2
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=2)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.983
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=2)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy 0.93
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=2)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.983
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=2)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy 0.93
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=2)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.983
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=2)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy 0.93
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=4)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.967
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=4)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy 0.967
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=6)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.983
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=6)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy 0.967
smp_size <- floor(0.5 * nrow(iris))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris)), size = smp_size)
train <- iris[train_ind, ]
test <- iris[-train_ind, ]
str(train)
str(test)
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=2)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.973
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=2)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy 0.973
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=4)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.96
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=4)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy 0.973
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=6)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.973
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=6)
mean(knn.pred==test$Species) ## test accuracy 0.947
table(knn.pred,test$Species)
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=2)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.983
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=2)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.983
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=2)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.983
set.seed(1)
smp_size <- floor(0.8 * nrow(iris))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris)), size = smp_size)
train <- iris[train_ind, ]
test <- iris[-train_ind, ]
str(train)
str(test)
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=2)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.983
smp_size <- floor(0.8 * nrow(iris))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris)), size = smp_size)
train <- iris[train_ind, ]
test <- iris[-train_ind, ]
str(train)
str(test)
# training accuracy, test accuracy for k=2
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=2)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.983
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=2)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy 0.967
# training accuracy, test accuracy for k=4
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=4)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.967
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=4)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy 0.967
# training accuracy, test accuracy for k=6
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=6)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.983
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=6)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy 0.967
smp_size <- floor(0.5 * nrow(iris))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris)), size = smp_size)
train <- iris[train_ind, ]
test <- iris[-train_ind, ]
str(train)
str(test)
# training accuracy, test accuracy for k=2
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=2)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.973
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=2)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy 0.973
# training accuracy, test accuracy for k=4
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=4)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.96
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=4)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy 0.973
# training accuracy, test accuracy for k=6
set.seed(1)
knn.pred=knn(train[,-5],train[,-5],train$Species,k=6)
table(knn.pred,train$Species)
mean(knn.pred==train$Species) ## training accuracy 0.973
set.seed(1)
knn.pred=knn(train[,-5],test[,-5],train$Species,k=6)
table(knn.pred,test$Species)
mean(knn.pred==test$Species) ## test accuracy 0.947
