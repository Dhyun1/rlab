CL<-NULL
LCL<-NULL
for(i in 1:nrow(data)){
UCL[i]=min(1,pbar+3*sqrt(pbar*(1-pbar)/data$n[i]))
CL[i]=pbar
LCL[i]=max(0,pbar-3*sqrt(pbar*(1-pbar)/data$n[i]))
}
plot(t_vec,data$D/data$n,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression("Sample fraction nonconforming, " ~ hat(p)),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(0,0.5),cex=0.8)
lines(t_vec,UCL,lty=2,cex=0.8)
lines(t_vec,CL,lty=2,cex=0.8)
lines(t_vec,LCL,lty=2,cex=0.8)
plot(t_vec,data_CL$p,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression("Sample fraction nonconforming, " ~ hat(p)),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(0,0.1),cex=0.8)
lines(t_vec,data_CL$UCL,lty=2,cex=0.8)
lines(t_vec,data_CL$CL,lty=2,cex=0.8)
lines(t_vec,data_CL$LCL,lty=2,cex=0.8)
which(data_CL$p>data_CL$UCL)
which(data_CL$p<data_CL$LCL)
which(data_CL$p>data_CL$UCL)
which(data_CL$p<data_CL$LCL)
pbar_revised<-sum(data$D[-15])/sum(data$n[-15])
data_CLrevised<-data%>%
mutate(p=D/n,
UCL=pbar_revised+3*sqrt(pbar_revised*(1-pbar)/n),
CL=pbar_revised,
LCL=max(0,pbar_revised-3*sqrt(pbar_revised*(1-pbar_revised)/n)))
data_CLrevised
data_CLrevised<-data%>%
mutate(p=D/n,
UCL=pbar_revised+3*sqrt(pbar_revised*(1-pbar)/n),
CL=pbar_revised,
LCL=pmax(0,pbar_revised-3*sqrt(pbar_revised*(1-pbar_revised)/n)))
data_CLrevised
pbar_revised<-sum(data$D[-15])/sum(data$n[-15])
UCL<-NULL
CL<-NULL
LCL<-NULL
for(i in 1:nrow(data)){
UCL[i]=min(1,pbar_revised+3*sqrt(pbar_revised*(1-pbar_revised)/data$n[i]))
CL[i]=pbar
LCL[i]=max(0,pba_revisedr-3*sqrt(pbar_revised*(1-pbar_revised)/data$n[i]))
}
<-sum(data$D[-15])/sum(data$n[-15])
pbar_revised<-sum(data$D[-15])/sum(data$n[-15])
pbar_revised<-sum(data$D[-15])/sum(data$n[-15])
UCL<-NULL
CL<-NULL
LCL<-NULL
for(i in 1:nrow(data)){
UCL[i]=min(1,pbar_revised+3*sqrt(pbar_revised*(1-pbar_revised)/data$n[i]))
CL[i]=pbar
LCL[i]=max(0,pba_revised-3*sqrt(pbar_revised*(1-pbar_revised)/data$n[i]))
}
pbar_revised<-sum(data$D[-15])/sum(data$n[-15])
UCL<-NULL
CL<-NULL
LCL<-NULL
for(i in 1:nrow(data)){
UCL[i]=min(1,pbar_revised+3*sqrt(pbar_revised*(1-pbar_revised)/data$n[i]))
CL[i]=pbar
LCL[i]=max(0,pbar_revised-3*sqrt(pbar_revised*(1-pbar_revised)/data$n[i]))
}
plot(t_vec,data$D/data$n,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression("Sample fraction nonconforming, " ~ hat(p)),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(0,0.5),cex=0.8)
lines(t_vec,UCL,lty=2,cex=0.8)
lines(t_vec,CL,lty=2,cex=0.8)
lines(t_vec,LCL,lty=2,cex=0.8)
which(data$D/data$n>UCL)
which(data$D/data$n<LCL)
plot(t_vec,data$D/data$n,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression("Sample fraction nonconforming, " ~ hat(p)),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(0,0.1),cex=0.8)
lines(t_vec,UCL,lty=2,cex=0.8)
lines(t_vec,CL,lty=2,cex=0.8)
lines(t_vec,LCL,lty=2,cex=0.8)
which(data$D/data$n>UCL)
which(data$D/data$n<LCL)
pbar<-sum(data$D)/sum(data$n)
UCL<-NULL
CL<-NULL
LCL<-NULL
for(i in 1:nrow(data)){
UCL[i]=min(1,pbar+3*sqrt(pbar*(1-pbar)/data$n[i]))
CL[i]=pbar
LCL[i]=max(0,pbar-3*sqrt(pbar*(1-pbar)/data$n[i]))
}
plot(t_vec,data$D/data$n,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression("Sample fraction nonconforming, " ~ hat(p)),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(0,0.5),cex=0.8)
lines(t_vec,UCL,lty=2,cex=0.8)
lines(t_vec,CL,lty=2,cex=0.8)
lines(t_vec,LCL,lty=2,cex=0.8)
which(data$D/data$n>UCL)
which(data$D/data$n<LCL)
UCL<-NULL
CL<-NULL
LCL<-NULL
for(i in 1:nrow(data)){
UCL[i]=min(1,pbar+3*sqrt(pbar*(1-pbar)/data$n[i]))
CL[i]=pbar
LCL[i]=max(0,pbar-3*sqrt(pbar*(1-pbar)/data$n[i]))
}
plot(t_vec,data$D/data$n,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression("Sample fraction nonconforming, " ~ hat(p)),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(0,0.1),cex=0.8)
lines(t_vec,UCL,lty=2,cex=0.8)
lines(t_vec,CL,lty=2,cex=0.8)
lines(t_vec,LCL,lty=2,cex=0.8)
which(data$D/data$n>UCL)
which(data$D/data$n<LCL)
pbar_revised<-sum(data$D[-15])/sum(data$n[-15])
UCL<-NULL
CL<-NULL
LCL<-NULL
for(i in 1:nrow(data)){
UCL[i]=min(1,pbar_revised+3*sqrt(pbar_revised*(1-pbar_revised)/data$n[i]))
CL[i]=pbar
LCL[i]=max(0,pbar_revised-3*sqrt(pbar_revised*(1-pbar_revised)/data$n[i]))
}
plot(t_vec,data$D/data$n,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression("Sample fraction nonconforming, " ~ hat(p)),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(0,0.1),cex=0.8)
lines(t_vec,UCL,lty=2,cex=0.8)
lines(t_vec,CL,lty=2,cex=0.8)
lines(t_vec,LCL,lty=2,cex=0.8)
which(data$D/data$n>UCL)
which(data$D/data$n<LCL)
library(dplyr)
dev.off() #plot
rm(list=ls()) #variable
cat("\014") #console
library(dplyr)
library(tidyverse)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
nbar<-sum(data$n)/nrow(data)
UCL<-NULL
CL<-NULL
LCL<-NULL
table_7e2<-tribble(
~n, ~D,
200,3,
250,4,
240,2,
300,5,
200,2,
250,4,
246,3,
258,5,
275,2,
274,1,
219,0,
238,10,
250,4,
302,6,
219,20,
246,3,
251,6,
273,7,
245,3,
260,1
)
data<-table_7e2
t_vec<-1:nrow(data)
pbar<-sum(data$D)/sum(data$n)
for(i in 1:nrow(data)){
UCL[i]=min(1,pbar+3*sqrt(pbar*(1-pbar)/nbar))
CL[i]=pbar
LCL[i]=max(0,pbar-3*sqrt(pbar*(1-pbar)/nbar))
}
plot(t_vec,data$D/data$n,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression("Sample fraction nonconforming, " ~ hat(p)),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(0,0.1),cex=0.8)
lines(t_vec,UCL,lty=2,cex=0.8)
lines(t_vec,CL,lty=2,cex=0.8)
lines(t_vec,LCL,lty=2,cex=0.8)
which(data$D/data$n>UCL)
which(data$D/data$n<LCL)
nbar
data$n
nbar<-mean(data$n)
nbar
nrow(data)
UCL<-NULL
CL<-NULL
LCL<-NULL
for(i in 1:nrow(data)){
UCL[i]=min(1,pbar+3*sqrt(pbar*(1-pbar)/nbar))
CL[i]=pbar
LCL[i]=max(0,pbar-3*sqrt(pbar*(1-pbar)/nbar))
}
plot(t_vec,data$D/data$n,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression("Sample fraction nonconforming, " ~ hat(p)),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(0,0.1),cex=0.8)
lines(t_vec,UCL,lty=2,cex=0.8)
lines(t_vec,CL,lty=2,cex=0.8)
lines(t_vec,LCL,lty=2,cex=0.8)
which(data$D/data$n>UCL)
which(data$D/data$n<LCL)
pbar<-sum(data$D)/sum(data$n)
for(i in 1:nrow(data)){
z[i]=((data$D[i]/data$n[i])-pbar)/sqrt(pbar*(1-pbar)/data$n[i])
}
z<-NULL
for(i in 1:nrow(data)){
z[i]=((data$D[i]/data$n[i])-pbar)/sqrt(pbar*(1-pbar)/data$n[i])
}
plot(t_vec,z,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression(Z[i]),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(-4,4),cex=0.8)
lines(t_vec,3,lty=2,cex=0.8)
plot(t_vec,z,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression(Z[i]),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(-4,4),cex=0.8)
lines(t_vec,rep(3,nrow(data)),lty=2,cex=0.8)
lines(t_vec,rep(0,nrow(data)),lty=2,cex=0.8)
lines(t_vec,rep(-3,nrow(data)),lty=2,cex=0.8)
plot(t_vec,z,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression(Z[i]),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(-4,10),cex=0.8)
lines(t_vec,rep(3,nrow(data)),lty=2,cex=0.8)
lines(t_vec,rep(0,nrow(data)),lty=2,cex=0.8)
lines(t_vec,rep(-3,nrow(data)),lty=2,cex=0.8)
which(z>3)
which(z<-3)
which(z<-3)
which(z>3)
which(z<(-3))
which(z>3)
plot(t_vec,data_CL1$z,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression(Z[i]),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(-3.5,10),cex=0.8)
UCL=3
CL=0
LCL=-3
which(z>UCL)
which(z<LCL)
z<-NULL
for(i in 1:nrow(data)){
z[i]=((data$D[i]/data$n[i])-pbar)/sqrt(pbar*(1-pbar)/data$n[i])
}
plot(t_vec,z,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression(Z[i]),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(-4,10),cex=0.8)
lines(t_vec,rep(3,nrow(data)),lty=2,cex=0.8)
lines(t_vec,rep(0,nrow(data)),lty=2,cex=0.8)
lines(t_vec,rep(-3,nrow(data)),lty=2,cex=0.8)
z
z>UCL
which(z>UCL)
which(z<LCL)
which(z>UCL)
which(z<LCL)
p1<-seq(0,0.2,by=0.01)
p1
p1<-seq(0,0.1,by=0.05)
p1
p1<-seq(0,0.1,by=0.01)
p1
beta=1-(ppois(7,lambda=n*p1)-ppois(0,lambda=n*p1))
lapply(p1, function(p1) beta=1-(ppois(7,lambda=n*p1)-ppois(0,lambda=n*p1)))
n=100
p1<-seq(0,0.1,by=0.01)
lapply(p1, function(p1) beta=1-(ppois(7,lambda=n*p1)-ppois(0,lambda=n*p1)))
apply(p1, function(p1) beta=1-(ppois(7,lambda=n*p1)-ppois(0,lambda=n*p1)))
sapply(p1, function(p1) beta=1-(ppois(7,lambda=n*p1)-ppois(0,lambda=n*p1)))
p1=0.06
beta=1-(ppois(7,lambda=n*p1)-ppois(0,lambda=n*p1))
beta
plot(x=p1,y=beta)
p1<-seq(0,0.1,by=0.01)
beta<-sapply(p1, function(p1) beta=1-(ppois(7,lambda=n*p1)-ppois(0,lambda=n*p1)))
class(p1)
p1[1]
p1[2]
plot(p1,beta)
n=100
UCL=0.075
CL=0.04
LCL=0.005
p=CL
c(n*LCL,n*UCL)
ppois(0,3)
ppois(1,3)
p1=0.06
beta=1-(ppois(7,lambda=n*p1)-ppois(0,lambda=n*p1))
beta
p1<-seq(0,0.1,by=0.01)
beta<-sapply(p1, function(p1) beta=1-(ppois(7,lambda=n*p1)+ppois(0,lambda=n*p1)))
plot(p1,beta)
p1=0.06
beta=ppois(7,lambda=n*p1)-ppois(0,lambda=n*p1)
beta
p1<-seq(0,0.1,by=0.01)
beta<-sapply(p1, function(p1) beta=ppois(7,lambda=n*p1)-ppois(0,lambda=n*p1))
plot(p1,beta)
beta
p1<-seq(0,0.1,by=0.01)
beta<-sapply(p1, function(p1) beta=ppois(7,lambda=n*p1)-ppois(0,lambda=n*p1))
plot(p1,beta)
p1
1/370
ARL0=1/alpha
alpha=1-(ppois(7,lambda=n*p)-ppois(0,lambda=n*p))
alpha
ARL0=1/alpha
ARL1=1/(1-beta)
c(ARL0,ARL1)
p1=0.06
beta=ppois(7,lambda=n*p1)-ppois(0,lambda=n*p1)
beta
ARL0=1/alpha
ARL1=1/(1-beta)
c(ARL0,ARL1)
plot(p1,beta)
p1<-seq(0,0.1,by=0.01)
p1
beta_p1<-sapply(p1, function(p1) beta=ppois(7,lambda=n*p1)-ppois(0,lambda=n*p1))
plot(p1,beta)
beta_p1<-sapply(p1, function(p1) beta=ppois(7,lambda=n*p1)-ppois(0,lambda=n*p1))
plot(p1,beta_p1)
p1<-seq(0,0.1,by=0.005)
beta_p1<-sapply(p1, function(p1) beta=ppois(7,lambda=n*p1)-ppois(0,lambda=n*p1))
plot(p1,beta_p1)
table_7e9<-tribble(
~n,~x,
18,12,
18,14,
24,20,
22,18,
22,15,
22,12,
20,11,
20,15,
20,12,
20,10,
18,18,
18,14,
18,9,
20,10,
20,14,
20,13,
24,16,
24,18,
22,20,
21,17
)
data<-table_7e9
t_vec<-1:nrow(data)
ubar<-sum(data$x)/sum(data$n)
UCL<-NULL
CL<-NULL
LCL<-NULL
for(i in 1:nrow(data)){
UCL[i]=ubar+3*sqrt(ubar/n[i])
CL[i]=ubar
LCL[i]=max(0,ubar-3*sqrt(ubar/n[i]))
}
plot(t_vec,data$x/data$n,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression(u[i]),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(0,1.5),cex=0.8)
lines(t_vec,UCL,lty=2,cex=0.8)
lines(t_vec,CL,lty=2,cex=0.8)
lines(t_vec,LCL,lty=2,cex=0.8)
which(data$x/data$n>UCL)
which(data$x/data$n<LCL)
UCL<-NULL
CL<-NULL
LCL<-NULL
for(i in 1:nrow(data)){
UCL[i]=ubar+3*sqrt(ubar/n[i])
CL[i]=ubar
LCL[i]=max(0,ubar-3*sqrt(ubar/n[i]))
}
plot(t_vec,data$x/data$n,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression(u[i]),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(0,1.5),cex=0.8)
lines(t_vec,UCL,lty=2,cex=0.8)
lines(t_vec,CL,lty=2,cex=0.8)
lines(t_vec,LCL,lty=2,cex=0.8)
which(data$x/data$n>UCL)
which(data$x/data$n<LCL)
UCL
table_7e9<-tribble(
~n,~x,
18,12,
18,14,
24,20,
22,18,
22,15,
22,12,
20,11,
20,15,
20,12,
20,10,
18,18,
18,14,
18,9,
20,10,
20,14,
20,13,
24,16,
24,18,
22,20,
21,17
)
data<-table_7e9
t_vec<-1:nrow(data)
ubar<-sum(data$x)/sum(data$n)
UCL<-NULL
CL<-NULL
LCL<-NULL
for(i in 1:nrow(data)){
UCL[i]=ubar+3*sqrt(ubar/n[i])
CL[i]=ubar
LCL[i]=max(0,ubar-3*sqrt(ubar/n[i]))
}
UCL
for(i in 1:nrow(data)){
UCL[i]=ubar+3*sqrt(ubar/data$n[i])
CL[i]=ubar
LCL[i]=max(0,ubar-3*sqrt(ubar/data$n[i]))
}
UCL
plot(t_vec,data$x/data$n,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression(u[i]),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(0,1.5),cex=0.8)
lines(t_vec,UCL,lty=2,cex=0.8)
lines(t_vec,CL,lty=2,cex=0.8)
lines(t_vec,LCL,lty=2,cex=0.8)
which(data$x/data$n>UCL)
which(data$x/data$n<LCL)
plot(t_vec,data$x/data$n,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression(u[i]),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(0,1.5),cex=0.8)
lines(t_vec,UCL,lty=2,cex=0.8)
lines(t_vec,CL,lty=2,cex=0.8)
lines(t_vec,LCL,lty=2,cex=0.8)
which(data$x/data$n>UCL)
which(data$x/data$n<LCL)
UCL<-NULL
CL<-NULL
LCL<-NULL
for(i in 1:nrow(data)){
UCL[i]=ubar+3*sqrt(ubar/nbar)
CL[i]=ubar
LCL[i]=max(0,ubar-3*sqrt(ubar/nbar))
}
plot(t_vec,data$x/data$n,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression(u[i]),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(0,1.5),cex=0.8)
lines(t_vec,UCL,lty=2,cex=0.8)
lines(t_vec,CL,lty=2,cex=0.8)
lines(t_vec,LCL,lty=2,cex=0.8)
which(data$x/data$n>UCL)
which(data$x/data$n<LCL)
nbar<-sum(data$n)/nrow(data)
UCL<-NULL
CL<-NULL
LCL<-NULL
for(i in 1:nrow(data)){
UCL[i]=ubar+3*sqrt(ubar/nbar)
CL[i]=ubar
LCL[i]=max(0,ubar-3*sqrt(ubar/nbar))
}
plot(t_vec,data$x/data$n,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression(u[i]),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(0,1.5),cex=0.8)
lines(t_vec,UCL,lty=2,cex=0.8)
lines(t_vec,CL,lty=2,cex=0.8)
lines(t_vec,LCL,lty=2,cex=0.8)
UCL<-NULL
CL<-NULL
LCL<-NULL
for(i in 1:nrow(data)){
UCL[i]=ubar+3*sqrt(ubar/nbar)
CL[i]=ubar
LCL[i]=max(0,ubar-3*sqrt(ubar/nbar))
}
plot(t_vec,data$x/data$n,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression(u[i]),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(0,1.5),cex=0.8)
lines(t_vec,UCL,lty=2,cex=0.8)
lines(t_vec,CL,lty=2,cex=0.8)
lines(t_vec,LCL,lty=2,cex=0.8)
which(data$x/data$n>UCL)
which(data$x/data$n<LCL)
UCL=3
CL=0
LCL=-3
z<-NULL
for(i in 1:nrow(data)){
z[i]=((data$x[i]/data$n[i])-ubar)/sqrt(ubar/data$n[i])
}
z
plot(t_vec,z,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression(Z[i]),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(-4,10),cex=0.8)
lines(t_vec,rep(3,nrow(data)),lty=2,cex=0.8)
lines(t_vec,rep(0,nrow(data)),lty=2,cex=0.8)
lines(t_vec,rep(-3,nrow(data)),lty=2,cex=0.8)
plot(t_vec,z,type="o",lty=1,pch=16,
xlab="Sample Number",ylab=expression(Z[i]),mgp=c(2,1,0),
xlim=c(0,length(t_vec)),ylim=c(-4,4),cex=0.8)
lines(t_vec,rep(3,nrow(data)),lty=2,cex=0.8)
lines(t_vec,rep(0,nrow(data)),lty=2,cex=0.8)
