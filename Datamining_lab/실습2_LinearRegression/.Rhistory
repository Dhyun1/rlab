library("ggplot2")
getwd()
iris <- read.csv("iris.csv")
head(iris)
nlevels(iris$Species)
iris$Species
nrow(iris)
factor(iris$Species)
factor(iris$Species)
nlevels(factor(iris$Species))
which(iris$Species=="versicolor")
num(which(iris$Species=="versicolor"))
count(which(iris$Species=="versicolor"))
kids <- c("Jack","Jill")
ages <- c(12,10)
d <- data.frame(kids,ages,stringsAsFactors=FALSE)
d
str(d)
str(iris)
str(iris$Species)
length(which(iris$Species=="versicolor"))
nlevels(factor(iris$Species))
factor(iris$Species)
levels(factor(iris$Species))
length(which(iris$Species=="setosa"))
length(which(iris$Species=="versicolor"))
length(which(iris$Species=="virginica"))
x<-rep(c(1,50))
x
x<-rep(1,50)
x
coded_setosa<-cbind(rep(1,50),rep(0,50))
coded_setosa
coded_versi<-cbind(rep(0,50),rep(1,50))
coded_virgi<-cbind(rep(0,50),rep(0,50))
coded_Species<-rbind(coded_setosa,coded_versi,coded_virgi)
coded_Species
iris_aug<-rbind(iris[,-5],coded_Species)
iris_aug<-rbind(iris[-5,],coded_Species)
iris[,-5]
iris_aug<-cbind(iris[,-5],coded_Species)
iris_aug
colnames(iris_aug[,5])<-d1
d1<-colnames(iris_aug[,5])
d2<-colnames(iris_aug[,6])
iris_aug
colnames(iris_aug[,5:6])<-c("d1","d2")
iris_aug
coded_Species<-rbind(coded_setosa,coded_versi,coded_virgi)
colnames(coded_Species)<-c("d1","d2")
iris <- read.csv("iris.csv")
levels(factor(iris$Species))
length(which(iris$Species=="setosa"))
length(which(iris$Species=="versicolor"))
length(which(iris$Species=="virginica"))
coded_setosa<-cbind(rep(1,50),rep(0,50))
coded_versi<-cbind(rep(0,50),rep(1,50))
coded_virgi<-cbind(rep(0,50),rep(0,50))
coded_Species<-rbind(coded_setosa,coded_versi,coded_virgi)
colnames(coded_Species)<-c("d1","d2")
iris_aug<-cbind(iris[,-5],coded_Species)
iris_aug
smp_size <- floor(0.7 * nrow(iris_aug))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris_aug)), size = smp_size)
train <- iris_aug[train_ind, ]
test <- iris_aug[-train_ind, ]
lm(Sepal_Length ~ Sepal.Width+Petal.Length+Petal.Width+d1+d2, data = train)
lm(Sepal.Length ~ Sepal.Width+Petal.Length+Petal.Width+d1+d2, data = train)
str(train)
lm_test<-lm(Sepal.Length ~ Sepal.Width+Petal.Length+Petal.Width+d1+d2, data = train)
lm_train<-lm(Sepal.Length ~ Sepal.Width+Petal.Length+Petal.Width+d1+d2,
data = train)
train_mse<-mean(lm_train$residuals^2)
train_mse
lm_train$residuals^2
y1<-c(3135,3001,2865,2890)
y2<-c(3210,3311,2975,3150)
y3<-c(2815,2910,2985,3050)
y4<-c(2619,2706,2612,2765)
y<-c(y1,y2,y3,y4)
lab<-c(rep(1,4),rep(2,4),rep(3,4),rep(4,4))
trt<-factor(lab)
data<-data.frame(y,trt)
lm.ex7<-lm(y~trt)
data.aov<- anova(lm.ex7)
library(BHH2)
anovaPlot(lm.ex7,labels = TRUE)
library(BHH2)
data.aov<- anova(lm.ex7)
fit.ex7<-fitted(lm.ex7)
res.ex7<-resid(lm.ex7)
plot(fit.ex7,res.ex7, color=trt)
ggplot(data = iris_aug) +
geom_point(mapping = aes(x = Sepal.Width, y = Sepal.Length, color = "blue"))
ggplot(data = iris_aug) +
geom_point(mapping = aes(x = Sepal.Width, y = Sepal.Length)
## Question1 ##
smp_size <- floor(0.7 * nrow(iris_aug))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris_aug)), size = smp_size)
train <- iris_aug[train_ind, ]
test <- iris_aug[-train_ind, ]
str(train)
str(test)
lm_train<-lm(Sepal.Length ~ Sepal.Width+Petal.Length+Petal.Width+d1+d2,
data = train)
train_mse<-mean(lm_train$residuals^2)
ggplot(data = iris_aug) +
geom_point(mapping = aes(x = Sepal.Width, y = Sepal.Length))
ggplot(data = iris_aug) +
geom_point(mapping = aes(x = Petal.Length, y = Sepal.Length))
ggplot(data = iris_aug) +
geom_point(mapping = aes(x = Petal.Width, y = Sepal.Length))
ggplot(data = iris_aug) +
geom_point(mapping = aes(x = Sepal.Width, y = Sepal.Length))
ggplot(data = iris_aug) +
geom_point(mapping = aes(x = Petal.Length, y = Sepal.Length))
ggplot(data = iris_aug) +
geom_point(mapping = aes(x = Petal.Width, y = Sepal.Length))
ggplot(data = iris_aug) +
geom_point(mapping = aes(x = Sepal.Width, y = Sepal.Length))
+
geom_point(mapping = aes(x = Petal.Length, y = Sepal.Length))
+
geom_point(mapping = aes(x = Petal.Length, y = Sepal.Length))
ggplot(data = iris_aug) +
geom_point(mapping = aes(x = Sepal.Width, y = Sepal.Length))
ggplot(data = iris_aug) +
geom_point(mapping = aes(x = Petal.Length, y = Sepal.Length))
ggplot(data = iris_aug) +
geom_point(mapping = aes(x = Petal.Width, y = Sepal.Length))
ggplot(data = iris_aug) +
geom_point(mapping = aes(x = d1, y = Sepal.Length))
x<-test[,-1]
x
test
x
x<-test[,-1]
p <- predict(lm_train, data.frame(x))
p
test_mse<-mean((test[,1]-p)^2)
test_mse
smp_size <- floor(0.6 * nrow(iris_aug))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris_aug)), size = smp_size)
train <- iris_aug[train_ind, ]
test <- iris_aug[-train_ind, ]
str(train)
str(test)
lm_train<-lm(Sepal.Length ~ Sepal.Width+Petal.Length+Petal.Width+d1+d2,
data = train)
train_mse<-mean(lm_train$residuals^2)
train_mse
x<-test[,-1]
p <- predict(lm_train, data.frame(x))
test_mse<-mean((test[,1]-p)^2)
test_mse
library("ggplot2")
getwd()
iris <- read.csv("iris.csv")
levels(factor(iris$Species))
length(which(iris$Species=="setosa"))
length(which(iris$Species=="versicolor"))
length(which(iris$Species=="virginica"))
coded_setosa<-cbind(rep(1,50),rep(0,50))
coded_versi<-cbind(rep(0,50),rep(1,50))
coded_virgi<-cbind(rep(0,50),rep(0,50))
coded_Species<-rbind(coded_setosa,coded_versi,coded_virgi)
colnames(coded_Species)<-c("d1","d2")
iris_aug<-cbind(iris[,-5],coded_Species)
iris_aug
iris_aug2<-cbind(iris[,-5],c(rep(1,50),rep(2,50),rep(3,50)))
iris_aug2
coded_Species2<-c(rep(1,50),rep(2,50),rep(3,50))
colnames(coded_Species2)<-"alloc"
colname(coded_Species2)<-"alloc"
coded_Species2<-c(rep(1,50),rep(2,50),rep(3,50))
alloc<-c(rep(1,50),rep(2,50),rep(3,50))
iris_aug2<-cbind(iris[,-5],alloc)
iris_aug2
iris <- read.csv("iris.csv")
iris
smp_size <- floor(0.7 * nrow(iris_aug))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris_aug)), size = smp_size)
train <- iris_aug[train_ind, ]
test <- iris_aug[-train_ind, ]
str(train)
str(test)
lm_train<-lm(Sepal.Length ~ Sepal.Width+Petal.Length+Petal.Width+d1+d2,
data = train)
train_mse<-mean(lm_train$residuals^2)
train_mse
x<-test[,-1]
p <- predict(lm_train, data.frame(x))
test_mse<-mean((test[,1]-p)^2)
test_mse
smp_size <- floor(0.7 * nrow(iris_aug2))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris_aug2)), size = smp_size)
train <- iris_aug2[train_ind, ]
test <- iris_aug2[-train_ind, ]
str(train)
str(test)
lm_train<-lm(Sepal.Length ~ Sepal.Width+Petal.Length+Petal.Width+d1+d2,
data = train)
lm_train<-lm(Sepal.Length ~ Sepal.Width+Petal.Length+Petal.Width+alloc,
data = train)
train_mse<-mean(lm_train$residuals^2)
train_mse
x<-test[,-1]
p <- predict(lm_train, data.frame(x))
test_mse<-mean((test[,1]-p)^2)
test_mse
smp_size <- floor(0.6 * nrow(iris_aug2))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris_aug2)), size = smp_size)
train <- iris_aug2[train_ind, ]
test <- iris_aug2[-train_ind, ]
str(train)
str(test)
lm_train<-lm(Sepal.Length ~ Sepal.Width+Petal.Length+Petal.Width+d1+d2,
data = train)
train_mse<-mean(lm_train$residuals^2)
lm_train<-lm(Sepal.Length ~ Sepal.Width+Petal.Length+Petal.Width+alloc,
data = train)
train_mse<-mean(lm_train$residuals^2)
train_mse
x<-test[,-1]
p <- predict(lm_train, data.frame(x))
test_mse<-mean((test[,1]-p)^2)
test_mse
coded_setosa<-cbind(rep(1,50),rep(0,50))
coded_versi<-cbind(rep(0,50),rep(1,50))
coded_virgi<-cbind(rep(-1,50),rep(-1,50))
coded_Species<-rbind(coded_setosa,coded_versi,coded_virgi)
colnames(coded_Species)<-c("d1","d2")
iris_aug<-cbind(iris[,-5],coded_Species)
smp_size <- floor(0.7 * nrow(iris_aug))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris_aug)), size = smp_size)
train <- iris_aug[train_ind, ]
test <- iris_aug[-train_ind, ]
str(train)
str(test)
lm_train<-lm(Sepal.Length ~ Sepal.Width+Petal.Length+Petal.Width+d1+d2,
data = train)
train_mse<-mean(lm_train$residuals^2)
train_mse
coded_setosa<-cbind(rep(1,50),rep(0,50))
coded_versi<-cbind(rep(0,50),rep(1,50))
coded_virgi<-cbind(rep(0,50),rep(0,50))
coded_Species<-rbind(coded_setosa,coded_versi,coded_virgi)
colnames(coded_Species)<-c("d1","d2")
iris_aug<-cbind(iris[,-5],coded_Species)
smp_size <- floor(0.7 * nrow(iris_aug))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris_aug)), size = smp_size)
train <- iris_aug[train_ind, ]
test <- iris_aug[-train_ind, ]
str(train)
str(test)
lm_train<-lm(Sepal.Length ~ Sepal.Width+Petal.Length+Petal.Width+d1+d2,
data = train)
train_mse<-mean(lm_train$residuals^2)
train_mse
levels(factor(iris$Species))
length(which(iris$Species=="setosa"))
length(which(iris$Species=="versicolor"))
length(which(iris$Species=="virginica"))
coded_setosa<-cbind(rep(1,50),rep(0,50))
coded_versi<-cbind(rep(0,50),rep(1,50))
coded_virgi<-cbind(rep(0,50),rep(0,50))
coded_Species<-rbind(coded_setosa,coded_versi,coded_virgi)
colnames(coded_Species)<-c("d1","d2")
iris_aug<-cbind(iris[,-5],coded_Species)
alloc<-c(rep(1,50),rep(2,50),rep(3,50))
iris_aug2<-cbind(iris[,-5],alloc)
ggplot(data = iris_aug) +
geom_point(mapping = aes(x = Sepal.Width, y = Sepal.Length))
ggplot(data = iris_aug) +
geom_point(mapping = aes(x = Petal.Length, y = Sepal.Length))
ggplot(data = iris_aug) +
geom_point(mapping = aes(x = Petal.Width, y = Sepal.Length))
smp_size <- floor(0.7 * nrow(iris_aug))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris_aug)), size = smp_size)
train <- iris_aug[train_ind, ]
test <- iris_aug[-train_ind, ]
str(train)
str(test)
train_mse<-mean(lm_train$residuals^2)
train_mse
x<-test[,-1]
p <- predict(lm_train, data.frame(x))
test_mse<-mean((test[,1]-p)^2)
test_mse
smp_size <- floor(0.7 * nrow(iris_aug2))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris_aug2)), size = smp_size)
train <- iris_aug2[train_ind, ]
test <- iris_aug2[-train_ind, ]
lm_train<-lm(Sepal.Length ~ Sepal.Width+Petal.Length+Petal.Width+alloc,
data = train)
train_mse<-mean(lm_train$residuals^2)
train_mse
x<-test[,-1]
p <- predict(lm_train, data.frame(x))
test_mse<-mean((test[,1]-p)^2)
test_mse
smp_size <- floor(0.6 * nrow(iris_aug))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris_aug)), size = smp_size)
train <- iris_aug[train_ind, ]
test <- iris_aug[-train_ind, ]
str(train)
str(test)
lm_train<-lm(Sepal.Length ~ Sepal.Width+Petal.Length+Petal.Width+d1+d2,
data = train)
train_mse<-mean(lm_train$residuals^2)
train_mse
x<-test[,-1]
p <- predict(lm_train, data.frame(x))
test_mse<-mean((test[,1]-p)^2)
test_mse
smp_size <- floor(0.6 * nrow(iris_aug2))
set.seed(1)
train_ind <- sample(seq_len(nrow(iris_aug2)), size = smp_size)
train <- iris_aug2[train_ind, ]
test <- iris_aug2[-train_ind, ]
str(train)
str(test)
lm_train<-lm(Sepal.Length ~ Sepal.Width+Petal.Length+Petal.Width+alloc,
data = train)
train_mse<-mean(lm_train$residuals^2)
train_mse
x<-test[,-1]
p <- predict(lm_train, data.frame(x))
test_mse<-mean((test[,1]-p)^2)
test_mse
