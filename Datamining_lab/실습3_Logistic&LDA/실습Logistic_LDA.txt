# 5주차 실습 : Logistic Regression & LDA

# 1. 패키지 설치 및 불러오기 
install.packages("ISLR")
install.packages("MASS")
install.packages("pROC")

library(ISLR)
library(MASS)
library(pROC)

# 2. 데이터 불러오기
# Smarket: S&P Stock Market Data
# reference: https://rdrr.io/cran/ISLR/man/Smarket.html

# Check the variable names
names(Smarket)

# Check the dimension (n by p)
dim(Smarket)

# Summary the data
summary(Smarket)

# Pairwise Scattet plot
pairs(Smarket)

# Correlation matrix for continuous variables
cor(Smarket[,-9])

# attach 
attach(Smarket)

# Plotting the Volume against sample index
plot(Volume)

# 1) Logistic regression

# Fitting logistic regression using full data
glm.fits<-glm(Direction~Lag1+Lag2+Lag3+Lag4+Volume,data=Smarket,family=binomial)

# Summary the fitted model
summary(glm.fits)

# Regression Coefficients (log-odds)
coef(glm.fits)

# Coefficients with s.e, z-value, p-value
summary(glm.fits)$coef

# Check the p-value corresponding to each predictor
summary(glm.fits)$coef
summary(glm.fits)$coef[,4]

# Make predictions (Output of logit model: The prob of Y=1)
glm.probs<-predict(glm.fits,type="response")

# Check the first ten probabilites
glm.probs[1:10]

# Confusion matrix

# 1250-dimensional vector
glm.pred <- rep("Down",1250)

glm.pred

# If estimated prob(Y=1:UP) then, consider it Up, otherwise, down.
glm.pred[glm.probs>.5] <- "Up"

glm.pred

# Confusion matrix
table(glm.pred,Direction)

# Accuracy
(512+146)/1250

# Accuracy
mean(glm.pred==Direction)

# Split Train set & Test set based on time (threshold: 2005)
train <- (Year<2005)

# Test set
Smarket.2005 <- Smarket[!train,] 

# Check dimension of test set
dim(Smarket.2005)

# The Y values of test set
Direction.2005 <- Direction[!train]
Direction.2005

# Fitting logistic regression using only training set (option:subset=train)
glm.fits <- glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Smarket,family=binomial,subset=train)

glm.fits

summary(glm.fits)

# Make prediction
glm.probs <- predict(glm.fits,Smarket.2005,type="response")

glm.probs

# Confusion matrix
glm.pred <- rep("Down",252)

glm.pred

glm.pred[glm.probs>.5] <- "Up"

glm.pred

# Confusion matrix
table(glm.pred,Direction.2005)

# Accuracy
mean(glm.pred==Direction.2005)

# New sample prediction (n=2)
# Result: Prob of Up <0.5 both -> both predicted as Down

# Use two predictos for example, Lag1, Lag2
glm.fits <- glm(Direction~Lag1+Lag2,data=Smarket,family=binomial,subset=train)

glm.fits

# Both Predicted as Down
predict(glm.fits,newdata=data.frame(Lag1=c(1.2,1.5),Lag2=c(1.1,-0.8)),type="response")

# 2) LDA (Linear Discriminant Analysis)

# Fitting LDA using training set (option:subset=train)
# Classify using Lag1 & Lag2
lda.fit <- lda(Direction~Lag1+Lag2,data=Smarket,subset=train)

# Check the fitted model
# Prior probabilities(proportion)of groups, Group means,
# Coefficients of linear discriminants:
lda.fit

# Make predictions on test set
lda.pred <- predict(lda.fit, Smarket.2005)
lda.pred
# Check the predicted class(Up/Down)
lda.class <- lda.pred$class
lda.class

# Confusion matrix
table(lda.class,Direction.2005)

# Accuracy
mean(lda.class==Direction.2005)

# Posterior prob for Down/Up
head(lda.pred$posterior)

# Check the number which Posterior prob of Up >=0.5 (Predicted as Up)
sum(lda.pred$posterior[,2]>=.5)

# Check the number which Posterior prob of Up < 0.5 (Predicted as Down)
sum(lda.pred$posterior[,2]<.5)

# Posterior prob for Down/Up
lda.pred$posterior[1:20,2]

# Check the predicted class
lda.class[1:20]

# 3) ROC curves for comparing two models (Logit,LDA)

# ROC CURVE, INPUT: True label for test set & Estimated Prob (Y=1)
glm.roc<-roc(Direction.2005,glm.probs)
# ROC CURVE, INPUT: True label for test set & Estimated Prob (Y=1)
lda.roc<-roc(Direction.2005,lda.pred$posterior[,2])

# ROC curves and AUC

names(glm.roc)

# For plotting ROC CURVE
glm.roc <-glm.roc[c("specificities","sensitivities","thresholds","auc")]
lda.roc <-lda.roc[c("specificities","sensitivities","thresholds","auc")]

plot(x=(1-glm.roc$specificities),y=glm.roc$sensitivities,xlim=c(0,1),ylim=c(0,1),type="l",xlab="1-Specificity",ylab = "Sensitivity",main = "ROC curve of LR")

plot(y=lda.roc$sensitivities,x=(1-lda.roc$specificities),col = "red",type="l", main="ROC curve of LDA")


# 겹쳐그려서 비교하기 (가장 유용하고 많이쓰임)
plot(x=(1-glm.roc$specificities),y=glm.roc$sensitivities,xlim=c(0,1),ylim=c(0,1),type="l",xlab="",ylab="")

par(new=TRUE)

plot(y=lda.roc$sensitivities,x=(1-lda.roc$specificities),col = "red",type="l", ,xlab="1-Specificity",ylab = "Sensitivity",main = "ROC curve")

# Test AUC of Logit model = 0.5197
glm.roc$auc
# Test AUC of LDA model = 0.5584 (BETTER)
lda.roc$auc
